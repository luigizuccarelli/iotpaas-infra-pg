apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app.kubernetes.io/component: tcprod-grafana
    app.kubernetes.io/name: tcprod-grafana
    app.kubernetes.io/part-of: tcprod-prometheus
    app.kubernetes.io/version: 7.3.7
  name: tcprod-grafana
  namespace: tcprod-pg
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: tcprod-grafana
      app.kubernetes.io/name: tcprod-grafana
      app.kubernetes.io/part-of: tcprod-prometheus
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: tcprod-grafana
        app.kubernetes.io/name: tcprod-grafana
        app.kubernetes.io/part-of: tcprod-prometheus
        app.kubernetes.io/version: 7.3.7
    spec:
      containers:
      - env:
        - name: GF_RENDERING_SERVER_URL
          value: http://tcprod-renderer:8081/render
        - name: GF_RENDERING_CALLBACK_URL
          value: http://tcprod-grafana:3000/
        - name: GF_LOG_FILTERS
          value: rendering:debug
        image: quay.io/luigizuccarelli/grafana:v1.2.0
        imagePullPolicy: IfNotPresent
        name: tcprod-grafana
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: tcprod-grafana-storage
        - mountPath: /etc/grafana/provisioning/datasources
          name: tcprod-grafana-datasources
        - mountPath: /etc/grafana/provisioning/dashboards
          name: tcprod-grafana-dashboards
        - mountPath: /grafana-dashboard-definitions/0/whitebox
          name: tcprod-grafana-dashboard-whitebox
        - mountPath: /grafana-dashboard-definitions/0/log-alert
          name: tcprod-grafana-dashboard-log-alert
      dnsPolicy: ClusterFirst
      nodeSelector:
        beta.kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      #serviceAccount: tcprod-grafana
      #serviceAccountName: tcprod-grafana
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: tcprod-grafana-storage
      - configMap:
          defaultMode: 420
          name: tcprod-grafana-datasources
        name: tcprod-grafana-datasources
      - configMap:
          defaultMode: 420
          name: tcprod-grafana-dashboards
        name: tcprod-grafana-dashboards
      - configMap:
          defaultMode: 420
          name: tcprod-grafana-dashboard-whitebox
        name: tcprod-grafana-dashboard-whitebox
